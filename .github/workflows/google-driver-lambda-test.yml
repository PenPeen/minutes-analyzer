name: Drive-Selector Lambda Function Tests

on:
  pull_request:
    paths:
      - 'drive-selector/lambda/**'
      - '.github/workflows/lambda-test.yml'
  push:
    branches:
      - main
      - develop
    paths:
      - 'drive-selector/lambda/**'

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: 🔄 チェックアウト
        uses: actions/checkout@v4

      - name: 💎 Ruby セットアップ
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          working-directory: drive-selector/lambda
          bundler-cache: true

      - name: 🧪 RSpecテスト実行
        id: test
        working-directory: drive-selector/lambda
        run: |
          echo "🧪 Drive-Selector Lambda関数のテストを実行中..."

          # テスト実行（JSON形式で結果を出力、出力をファイルに保存）
          set +e  # 一時的にエラーで停止しないように設定
          bundle exec rspec --format json --out test_results.json --format documentation > test_output.log 2>&1
          TEST_EXIT_CODE=$?
          set -e  # エラーで停止する設定を復元

          # 結果を表示
          cat test_output.log

          # 終了コードに基づいて結果を設定
          if [ $TEST_EXIT_CODE -eq 0 ]; then
            echo "test_result=success" >> $GITHUB_OUTPUT
            echo "✅ テストが完了しました"
          else
            echo "test_result=failure" >> $GITHUB_OUTPUT
            echo "❌ テストが失敗しました (終了コード: $TEST_EXIT_CODE)"
            exit $TEST_EXIT_CODE
          fi

      - name: 💬 テスト失敗時のPRコメント
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            // テスト出力を読み込み
            let testOutput = '';
            try {
              testOutput = fs.readFileSync('drive-selector/lambda/test_output.log', 'utf8');
            } catch (error) {
              testOutput = 'テスト出力の取得に失敗しました。';
            }

            // JSON結果を読み込み
            let testResults = null;
            try {
              const resultsJson = fs.readFileSync('drive-selector/lambda/test_results.json', 'utf8');
              testResults = JSON.parse(resultsJson);
            } catch (error) {
              console.log('JSON結果の解析に失敗しました:', error);
            }

            // 失敗したテストの詳細を抽出
            let failedExamples = '';
            let testSummary = '';

            if (testResults && testResults.summary) {
              testSummary = `${testResults.summary.example_count} examples, ${testResults.summary.failure_count} failures`;

              if (testResults.examples) {
                const failedTests = testResults.examples.filter(ex => ex.status === 'failed');
                if (failedTests.length > 0) {
                  failedExamples = failedTests.map(test =>
                    `• ${test.full_description}\n  ${test.file_path}:${test.line_number}`
                  ).join('\n');
                }
              }
            } else {
              // フォールバック：テキスト出力から抽出
              const summaryMatch = testOutput.match(/(\d+) examples?, (\d+) failures?/);
              testSummary = summaryMatch ? summaryMatch[0] : '';

              const failedMatch = testOutput.match(/Failed examples:(.*?)(?=Finished in|$)/s);
              failedExamples = failedMatch ? failedMatch[1].trim() : '';
            }

            // 既存のボットコメントを検索
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('🧪 Drive-Selector Lambda Function Tests')
            );

            const commentBody = `## 🧪 Drive-Selector Lambda Function Tests

            ❌ **テストが失敗しました**

            ### 📊 テスト結果サマリー
            ${testSummary}

            ### 💥 失敗したテスト
            ${failedExamples ? `\`\`\`\n${failedExamples}\n\`\`\`` : '詳細な失敗情報が取得できませんでした。'}

            <details>
            <summary>📋 完全なテスト出力を表示</summary>

            \`\`\`
            ${testOutput.slice(-4000)}
            \`\`\`
            </details>

            ### 🔧 対応方法
            1. ローカルで \`cd drive-selector/lambda && bundle exec rspec\` を実行してテストを確認
            2. 失敗したテストケースを修正
            3. 再度プッシュしてテストを実行

            ---
            *このコメントは自動生成されました - ${new Date().toLocaleString('ja-JP', { timeZone: 'Asia/Tokyo' })}*`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }

      - name: 💬 テスト成功時のPRコメント更新
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('🧪 Drive-Selector Lambda Function Tests')
            );

            if (botComment) {
              const successBody = `## 🧪 Drive-Selector Lambda Function Tests

              ✅ **すべてのテストが成功しました！**

              ### 📊 テスト結果
              Drive-Selector Lambda関数のRSpecテストがすべて正常に完了しました。

              ---
              *このコメントは自動生成されました - ${new Date().toLocaleString('ja-JP', { timeZone: 'Asia/Tokyo' })}*`;

              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: successBody
              });
            }

      - name: 📊 テスト結果のアップロード
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: drive-selector-test-results
          path: |
            drive-selector/lambda/test_output.log
            drive-selector/lambda/test_results.json
          retention-days: 7
