# 本番環境用環境変数設定
# このファイルをコピーして .env.production を作成し、実際の値を設定してください
# 重要: .env.production は .gitignore に追加し、リポジトリにコミットしないでください

# ===== 必須設定 =====

# Google Gemini API Key
# Google AI Studio (https://aistudio.google.com/app/apikey) で取得
# このキーはTerraform経由でSecrets Managerに保存されます
GEMINI_API_KEY=your_gemini_api_key_here

# 🔐 Google Drive API設定 (必須)
# 非公開ファイルへのアクセスにはサービスアカウント認証が必要
# サービスアカウントのJSONキーをそのまま貼り付けてください（改行も含めて1行で）
# 例: GOOGLE_SERVICE_ACCOUNT_JSON={"type": "service_account", ...}
GOOGLE_SERVICE_ACCOUNT_JSON=


# ===== Slack通知設定 =====

# Slack Bot Token (xoxb-で始まるトークン)
# Slack App作成 > OAuth & Permissions > Bot User OAuth Tokenで取得
# ユーザーマッピング機能を使用する場合は users:read, users:read.email スコープも必要
SLACK_BOT_TOKEN=
# 送信先チャンネルID（例: C1234567890）
# チャンネルを右クリック > View channel details > Channel IDで確認
SLACK_CHANNEL_ID=

# 🤖 Slack Bot設定 (Controller Lambda用)
SLACK_SIGNING_SECRET=
SLACK_APP_ID=
PROCESS_LAMBDA_ARN=

# ===== AWS設定 =====

# AWSリージョン
AWS_REGION=ap-northeast-1

# AWS認証情報（AWS CLIで設定済みの場合は不要）
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key

# ===== Notion連携設定 =====

# 📝 Notion連携設定 (オプション)
NOTION_API_KEY=
NOTION_DATABASE_ID=
NOTION_TASK_DATABASE_ID=

# ===== Google OAuth認証設定 =====

# 🔐 Google OAuth認証設定 (Slack Bot用)
# Google Cloud ConsoleでOAuth 2.0クライアントIDを作成後、ここに設定
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
USE_OAUTH=true


# ===== 設定例・注意事項 =====

# APIキー生成例:
# openssl rand -base64 32
# または Python: import secrets; print(secrets.token_urlsafe(32))

# Slack Bot Token取得手順:
# 1. https://api.slack.com/apps にアクセス
# 2. Create New App > From scratch
# 3. OAuth & Permissions > Scopes で chat:write, chat:write.public を追加
# 4. Install to Workspace
# 5. Bot User OAuth Tokenをコピー
# 6. チャンネルにBotを招待

# ===== ユーザーマッピング機能設定 =====

# Google Calendar統合とユーザーマッピングを有効化（デフォルト: true）
# 無効化する場合は false に設定
GOOGLE_CALENDAR_ENABLED=true
USER_MAPPING_ENABLED=true

# セキュリティベストプラクティス:
# - 本ファイルは必ず .gitignore に追加
# - APIキーは定期的にローテーション
# - 本番環境では強力なAPIキーを使用
# - Slack Botはチャンネル権限を適切に設定
